// -*- C++ -*-
// AID-GENERATED
// =========================================================================
// This class was generated by AID - Abstract Interface Definition          
// DO NOT MODIFY, but use the org.freehep.aid.Aid utility to regenerate it. 
// =========================================================================
#ifndef EVENT_TRACKERHIT_H
#define EVENT_TRACKERHIT_H 1

#include "EVENT/LCObject.h"
#include "LCIOSTLTypes.h"
#include "empty_ignore.h"

namespace EVENT {


class TrackerHit ;
/**Vector of (pointers to) TrackerHits.*/
typedef std::vector<TrackerHit*> TrackerHitVec ;
/** A generic tracker hit to be used by pattern recognition.
 * 
 * @author gaede
 * @version $Id: TrackerHit.aid,v 1.16 2010-06-17 12:28:59 engels Exp $
 */

class TrackerHit : public LCObject {

public: 
    /// Destructor.
    virtual ~TrackerHit() { /* nop */; }


    /** Useful typedef for template programming with LCIO */
    typedef TrackerHit lcobject_type ;

   /** Same name as in CalorimeterHit, even though there are no 'cells' in this case
     */
    virtual int getCellID0() const = 0;

    /** Same name as in CalorimeterHit, even though there are no 'cells' in this case
     *  Optional, check/set flag(LCIO::RTHBIT_ID1)==1.
     */
    virtual int getCellID1() const = 0;

    /** The hit  position in [mm].	
     */
    virtual const double* getPosition() const = 0;

    /** Covariance of the position (x,y,z), stored as lower triangle matrix. i.e.
     *  cov(x,x) , cov(y,x) , cov(y,y) , cov(z,x) , cov(z,y) , cov(z,z).
     */
    virtual const FloatVec & getCovMatrix() const = 0;

    /** The dE/dx of the hit in [GeV].
     *  @deprecated
     *  @see getEDep()
     */
    virtual float getdEdx() const = 0;

    /** The  time of the hit in [ns].
     */
    virtual float getTime() const = 0;

    //     /**Type of raw data hit, either one of<br>
    //      * LCIO::TPCHIT<br>
    //      * LCIO::SIMTRACKERHIT<br>
    //      */
    //    public const String& getType() const ;
    /** Type of hit. Mapping of integer types to type names
     * through collection parameters "TrackerHitTypeNames"
     * and "TrackerHitTypeValues".
     */
    virtual int getType() const = 0;

    /** The quality bit flag of the hit */
    virtual int getQuality() const = 0;

    /** The energy deposited on the hit [GeV] */
    virtual float getEDep() const = 0;

    /** The error measured on EDep [GeV] */
    virtual float getEDepError() const = 0;

    /** The raw data hits. 
     * Check getType() to get actual data type.
     */
    virtual const LCObjectVec & getRawHits() const = 0;

//     public void setPosition( double3V pos) ;
//     public void setCovMatrix( const FloatVec& cov) ;
//     public void setTime( float time ) ;
//     public void setTPCHit( TPCHit* hit ) ;
}; // class
} // namespace EVENT
#endif /* ifndef EVENT_TRACKERHIT_H */
