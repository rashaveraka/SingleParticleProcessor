// Current Status:
// Dictionaries which do not compile with -fmodules:
//   * /home/vvassilev/workspace/llvm/release/Release+Asserts/bin/clang++  -pipe -m64 -std=c++11 -Wshadow -Wall -W -Woverloaded-virtual -fPIC -Iinclude  -Wno-deprecated-declarations  -Xclang -fmodules -Xclang -fmodules-cache-path=/home/vvassilev/workspace/root/pcm/ -pthread -I. -o net/net/src/G__Net.o -c net/net/src/G__Net.cxx
//   * /home/vvassilev/workspace/llvm/release/Release+Asserts/bin/clang++ -g -pipe -m64 -std=c++11 -Wshadow -Wall -W -Woverloaded-virtual -fPIC -Iinclude  -Wno-deprecated-declarations  -Xclang -fmodules -Xclang -fmodules-cache-path=/home/vvassilev/workspace/root/pcm/ -pthread -I. -o hist/hist/src/G__Hist.o -c hist/hist/src/G__Hist.cxx
//   * /home/vvassilev/workspace/llvm/release/Release+Asserts/bin/clang++  -pipe -m64 -std=c++11 -Wshadow -Wall -W -Woverloaded-virtual -fPIC -Iinclude  -Wno-deprecated-declarations  -Xclang -fmodules -Xclang -fmodules-cache-path=/home/vvassilev/workspace/root/pcm/ -pthread -I. -o graf2d/gpad/src/G__Gpad.o -c graf2d/gpad/src/G__Gpad.cxx
//   * /home/vvassilev/workspace/llvm/release/Release+Asserts/bin/clang++  -pipe -m64 -std=c++11 -Wshadow -Wall -W -Woverloaded-virtual -fPIC -Iinclude  -Wno-deprecated-declarations  -Xclang -fmodules -Xclang -fmodules-cache-path=/home/vvassilev/workspace/root/pcm/ -pthread -I. -o gui/gui/src/G__Gui.o -c gui/gui/src/G__Gui.cxx
//   * 
//module ROOT {
//requires cplusplus
module sql_pgsql {
  export *
  header "TPgSQLServer.h"
  header "TPgSQLRow.h"
  header "TPgSQLStatement.h"
  header "TPgSQLResult.h"
}
module graf3d_x3d {
  export *
  header "TViewerX3D.h"
  header "TX3DFrame.h"
}

module RooMsgService {
  header "RooMsgService.h"
  header "RooCmdArg.h"
  header "RooLinkedList.h"
  header "RooLinkedListElem.h"
  header "RooHashTable.h"
  header "RooGlobalFunc.h"
  export *
}

module roofit_roofitcore {
  export *
  header "RooAbsCache.h"
  header "RooNumber.h"
  header "RooRangeBoolean.h"
  header "RooRandom.h"
  header "RooPlot.h"
  header "RooHistPdf.h"
  header "RooDataSet.h"
  header "RooNumConvolution.h"
  header "RooDirItem.h"
  header "RooCustomizer.h"
  header "RooSetProxy.h"
  header "RooNameSet.h"
  header "RooBinningCategory.h"
  header "RooCategoryProxy.h"
  header "RooAdaptiveIntegratorND.h"
  header "RooTable.h"
  header "RooParamBinning.h"
  header "RooExtendedTerm.h"
  header "RooSimPdfBuilder.h"
  header "RooTreeDataStore.h"
  //header "RooComplex.h" // deprecated must not include
  header "RooNumGenConfig.h"
  header "RooIntegratorBinding.h"
  header "RooAdaptiveGaussKronrodIntegrator1D.h"
  header "RooNormSetCache.h"
  header "RooRealMPFE.h"
  header "RooAbsCachedPdf.h"
  header "RooPullVar.h"
  header "RooProduct.h"
  header "RooConstraintSum.h"
  header "RooMinuit.h"
  header "RooSimWSTool.h"
  header "RooAbsStudy.h"
  header "RooHistError.h"
  header "RooFracRemainder.h"
  header "RooAbsHiddenReal.h"
  header "RooMapCatEntry.h"
  header "RooCacheManager.h"
  header "RooMCStudy.h"
  header "RooLinkedListIter.h"
  header "RooResolutionModel.h"
  header "RooMPSentinel.h"
  header "RooEffGenContext.h"
  header "RooNumIntFactory.h"
  header "RooRealIntegral.h"
  header "RooMultiVarGaussian.h"
  header "RooGenContext.h"
  header "RooFit.h"
  header "RooAbsBinning.h"
  header "RooLinTransBinning.h"
  header "RooMath.h"
  header "RooRealVarSharedProperties.h"
  header "RooAbsCollection.h"
  header "RooDataHist.h"
  header "RooSuperCategory.h"
  header "RooExtendPdf.h"
  header "RooArgSet.h"
  header "RooSimultaneous.h"
  header "RooCatType.h"
  header "RooNumConvPdf.h"
  header "RooBrentRootFinder.h"
  header "RooAbsAnaConvPdf.h"
  header "RooScaledFunc.h"
  header "RooAbsCacheElement.h"
  header "RooExtendedBinding.h"
  header "RooAbsArg.h"
  header "RooAddition.h"
  header "RooGaussKronrodIntegrator1D.h"
  header "RooErrorVar.h"
  header "RooAbsRootFinder.h"
  header "RooRealSumPdf.h"
  header "RooHistFunc.h"
  header "RooAcceptReject.h"
  header "RooMoment.h"
  header "RooAbsCategoryLValue.h"
  header "RooProdGenContext.h"
  header "Roo1DTable.h"
  header "RooArgProxy.h"
  header "RooGenFitStudy.h"
  header "RooAbsRealLValue.h"
  header "RooGrid.h"
  header "RooFactoryWSTool.h"
  header "RooCurve.h"
  header "RooNumCdf.h"
  header "RooGenFunction.h"
  header "RooDerivative.h"
  header "RooTrace.h"
  header "RooFitResult.h"
  header "RooRandomizeParamMCSModule.h"
  header "RooSharedPropertiesList.h"
  header "RooVectorDataStore.h"
  header "RooAbsMCStudyModule.h"
  header "RooAbsSelfCachedPdf.h"
  header "RooAbsLValue.h"
  header "RooErrorHandler.h"
  header "RooDataHistSliceIter.h"
  header "RooBinnedGenContext.h"
  header "RooAbsString.h"
  header "RooSentinel.h"
  header "RooCachedPdf.h"
  header "RooSimSplitGenContext.h"
  header "RooThreshEntry.h"
  header "RooUnitTest.h"
  header "RooAbsIntegrator.h"
  header "RooAICRegistry.h"
  header "RooStudyManager.h"
  header "RooProjectedPdf.h"
  header "RooChi2Var.h"
  header "RooPolyVar.h"
  header "RooStudyPackage.h"
  header "RooEllipse.h"
  header "RooAbsOptTestStatistic.h"
  header "RooThresholdCategory.h"
  header "RooAbsNumGenerator.h"
  header "RooAddGenContext.h"
  header "RooDataProjBinding.h"
  header "RooAbsData.h"
  header "RooAbsFunc.h"
  header "RooNumRunningInt.h"
  header "RooMinimizer.h"
  header "RooDataWeightedAverage.h"
  header "RooFormulaVar.h"
  header "RooInt.h"
  header "RooRealBinding.h"
  header "RooAddModel.h"
  header "RooObjCacheManager.h"
  header "RooNumGenFactory.h"
  header "RooAbsDataStore.h"
  header "RooWorkspace.h"
  header "RooInvTransform.h"
  header "RooGenProdProj.h"
  header "RooPrintable.h"
  header "RooEffProd.h"
  header "RooRealProxy.h"
  header "RooProofDriverSelector.h"
  header "RooChangeTracker.h"
  header "RooTreeData.h"
  header "RooRangeBinning.h"
  header "RooNumIntConfig.h"
  header "RooIntegrator1D.h"
  header "RooAbsSelfCachedReal.h"
  header "RooClassFactory.h"
  header "RooTruthModel.h"
  header "RooAbsProxy.h"
  header "RooAbsPdf.h"
  header "RooConvCoefVar.h"
  header "RooFormula.h"
  header "RooSimGenContext.h"
  header "RooMinimizerFcn.h"
  header "RooStringVar.h"
  header "RooRecursiveFraction.h"
  header "RooAbsTestStatistic.h"
  header "RooLinearVar.h"
  header "RooNameReg.h"
  header "RooMCIntegrator.h"
  header "RooFFTConvPdf.h"
  header "RooBinIntegrator.h"
  header "RooEfficiency.h"
  header "RooBanner.h"
  header "RooConstVar.h"
  header "RooPlotable.h"
  header "RooAddPdf.h"
  header "RooFunctor.h"
  header "RooList.h"
  header "RooDLLSignificanceMCSModule.h"
  header "RooCmdConfig.h"
  header "RooAbsGenContext.h"
  header "RooStreamParser.h"
  header "RooSegmentedIntegrator2D.h"
  header "RooExpensiveObjectCache.h"
  header "RooBinning.h"
  header "RooCintUtils.h"
  header "RooCategory.h"
  header "RooRefCountList.h"
  header "RooNLLVar.h"
  header "RooGenericPdf.h"
  header "RooProfileLL.h"
  header "RooDouble.h"
  header "RooArgList.h"
  header "RooAbsCachedReal.h"
  header "RooCategorySharedProperties.h"
  header "RooRealConstant.h"
  header "RooRealVar.h"
  header "RooTObjWrap.h"
  header "RooConvIntegrandBinding.h"
  header "RooTFoamBinding.h"
  header "RooListProxy.h"
  header "RooXYChi2Var.h"
  header "RooSharedProperties.h"
  header "RooIntegrator2D.h"
  header "RooAbsCategory.h"
  header "RooCompositeDataStore.h"
  header "RooSegmentedIntegrator1D.h"
  header "RooRealAnalytic.h"
  header "RooMultiCatIter.h"
  header "RooMultiCategory.h"
  header "RooMappedCategory.h"
  header "RooProdPdf.h"
  header "RooFoamGenerator.h"
  header "RooUniformBinning.h"
  header "RooConvGenContext.h"
  header "RooAbsReal.h"
  header "RooImproperIntegrator1D.h"
  header "RooMultiGenFunction.h"
  header "RooSetPair.h"
  header "RooQuasiRandomGenerator.h"
  header "RooCachedReal.h"
  header "RooHist.h"
}
module math_splot {
  export *
  header "TSPlot.h"
}
module gui_guihtml {
  export *
  header "TGHtmlTokens.h"
  header "TGHtmlBrowser.h"
  header "TGHtmlUri.h"
  header "TGHtml.h"
}
module gui_sessionviewer {
  export *
  header "TProofProgressMemoryPlot.h"
  header "TProofProgressLog.h"
  header "TProofProgressDialog.h"
  header "TSessionViewer.h"
  header "TSessionLogView.h"
  header "TSessionDialogs.h"
}
module net_ldap {
  export *
  header "TLDAPEntry.h"
  header "CintLDAP.h"
  header "TLDAPServer.h"
  header "TLDAPAttribute.h"
  header "TLDAPResult.h"
}
module html {
  export *
  header "TDocParser.h"
  header "THtml.h"
  header "TDocInfo.h"
  header "TDocDirective.h"
  header "TClassDocOutput.h"
  header "TDocOutput.h"
}

// Modules needed by rootcling. When building rootcling we must not import info from core_base 

module DllImport [extern_c] {
  header "DllImport.h"
  export *
}

module RVersion [extern_c]{
  header "RVersion.h"
  export *
}

module Rtypes {
  module SchemaHelper {
    header "TSchemaHelper.h"
    export *
  }
  module GenericClassInfo {
    header "TGenericClassInfo.h"
    export *
  }

  header "Rtypes.h"

  export *
}

module RtypesCore { header "RtypesCore.h" export * }
module Rtypeinfo { header "Rtypeinfo.h" export * }

module VersionCheck {
  header "TVersionCheck.h"
  export *
}

module String {
  header "TString.h"
  export *
}
module MathBase { header "TMathBase.h" export * }

module Riosfwd {
  header "Riosfwd.h"
  export *
}
module Riostream { header "Riostream.h" export * }

module ESTLType {
  header "ESTLType.h"
  export *
}

module Application {
  export *
}

module ClassEdit {
  header "TClassEdit.h"
  header "ESTLType.h"

  export *
}

module Rstrstream { header "Rstrstream.h" export * }
module RootMetaSelection { header "RootMetaSelection.h" export * }


module SchemaType {
  header "TSchemaType.h"
  export *
}

module CoversionRuleParser {
  header "RConversionRuleParser.h"
  export *
}

module SchemaRuleProcessor {
  header "TSchemaRuleProcessor.h"
  export *
}

module RConfig [extern_c]{ header "RConfig.h" export * }
module RConfigOptions [extern_c]{ header "RConfigOptions.h" export * }
module RConfigure [extern_c]{ header "RConfigure.h" export * }

module Named { header "TNamed.h" export * }
module Object {
  header "TObject.h"
  header "TBuffer.h"
  export *
}
module Storage { header "TStorage.h" export * }
module AttLine { header "TAttLine.h" export * }
module GuiTypes { header "GuiTypes.h" export * }

module Canvas {
  header "TCanvas.h"
  export *
}

module Varargs { header "Varargs.h" export * }
module MessageTypes {   header "MessageTypes.h" export * }
module core_base {
  requires cplusplus
  export *

  header "TCanvasImp.h"
  header "Buttons.h"
  header "TAttFill.h"
  header "TAttMarker.h"
  header "TAttPad.h"
  header "TAttText.h"
  header "TVirtualPad.h"
  header "TVirtualX.h"

  header "Htypes.h"
  header "TObjectSpy.h"
  header "TQObjectEmitVA.h"
  header "TVirtualPadEditor.h"
  header "TQClass.h"
  //header "config.h" //deprecated use RConfigure.h
  header "TBenchmark.h"
  header "TVirtualMutex.h"
  header "TParameter.h"
  header "Bytes.h"
  header "Byteswap.h"
  header "GLConstants.h"
  header "Gtypes.h"
  header "KeySymbols.h"
  header "Match.h"
  header "Strlen.h"
  header "TApplication.h"
  header "TApplicationImp.h"
  header "TContextMenu.h"
  header "TContextMenuImp.h"
  textual header "RtypesImp.h" // Must be included only from the dictionaries.

  //module Exception { header "TException.h" export * } // We need to suppress TRY macro
  header "TMD5.h"
  header "TAtt3D.h"
  header "TThreadSlots.h"
  header "TGuiFactory.h"
  header "TAttAxis.h"
  header "TPluginManager.h"
  header "TVirtualViewer3D.h"
  header "TVirtualPerfStats.h"
  header "TEnv.h"
  header "TColor.h"
  header "TMemberInspector.h"
  header "TVirtualFFT.h"
  header "TRefCnt.h"
  header "TVirtualAuth.h"
  header "TSystemFile.h"
  header "TBuffer3DTypes.h"
  header "TPoint.h"
  header "TQConnection.h"
  header "TRef.h"
  header "TSystem.h"
  header "TQObject.h"
  header "TROOT.h"
  header "TRemoteObject.h"
  header "TObjString.h"
  header "TMacro.h"
  header "TDirectory.h"
  header "TStringLong.h"
  header "TBrowser.h"
  header "TUUID.h"
  header "TError.h"
  header "TDatime.h"
  header "TUrl.h"
  header "TProcessUUID.h"
  header "TUri.h"
  header "TVirtualPadPainter.h"
  header "RStipples.h"
  header "TSysEvtHandler.h"
  header "TVirtualGL.h"
  header "TAttBBox2D.h"
  header "TControlBarImp.h"
  header "TFileInfo.h"
  header "TVirtualMonitoring.h"
  header "TFileCollection.h"
  header "TStyle.h"
  header "Rpair.h"
  header "TExec.h"
  header "TInetAddress.h"
  header "TRedirectOutputGuard.h"
  header "TProcessID.h"
  header "TAttBBox.h"
  //header "Windows4Root.h" // not windows!
  header "TVirtualPS.h"
  header "TTask.h"
  header "TTimeStamp.h"
  header "TBuffer3D.h"
  header "TBrowserImp.h"
  header "TStopwatch.h"
  header "TVirtualTableInterface.h"
  header "TQCommand.h"
  header "TPRegexp.h"
  header "TSystemDirectory.h"
  header "Bswapcpy.h"
  header "TRegexp.h"
  header "TFolder.h"
  header "TTime.h"
  header "RQ_OBJECT.h"
  header "TRootIOCtor.h"
  header "TColorGradient.h"
  header "TMessageHandler.h"
  header "TInspectorImp.h"
  header "TTimer.h"
  header "TBase64.h"
//}// because of cyclic dependencies
//module core_meta {
//  export *
  header "TClassStreamer.h"
  header "TFunction.h"
  header "TMethodCall.h"
  header "TInterpreter.h"
  header "TFunctionTemplate.h"
  header "TDataMember.h"
  header "TVirtualRefProxy.h"
  header "TListOfFunctionTemplates.h"
  header "TGlobal.h"
  header "TSchemaRule.h"
  header "TListOfDataMembers.h"
  header "TEnum.h"
  header "TBaseClass.h"
  header "TInterpreterValue.h"
  header "TDataType.h"
  header "TClassGenerator.h"
  header "TMemberStreamer.h"
  header "TClassMenuItem.h"
  header "TClass.h"
  header "TStreamerElement.h"
  header "TDictAttributeMap.h"
  header "TProtoClass.h"
  header "TEnumConstant.h"
  header "TIsAProxy.h"
  header "TClassRef.h"
  header "TMethod.h"
  header "TDictionary.h"
  header "TSchemaRuleSet.h"
  header "TStreamer.h"
  header "TFileMergeInfo.h"
  header "TListOfFunctions.h"
  header "TVirtualIsAProxy.h"
  header "TRealData.h"
  header "TToggle.h"
  header "TMethodArg.h"
  header "TListOfEnums.h"
  header "TVirtualStreamerInfo.h"
  header "TToggleGroup.h"
//}// because of cyclic dependencies
//module core_cont {
//  export *
  header "TArray.h"
  header "TArrayC.h"
  header "TArrayD.h"
  header "TArrayF.h"
  header "TArrayI.h"
  header "TArrayL.h"
  header "TArrayL64.h"
  header "TArrayS.h"
  header "TSortedList.h"
  header "TRefTable.h"
  header "TRefArray.h"
  header "TVirtualCollectionProxy.h"
  header "TOrdCollection.h"
  header "TBtree.h"
  header "TClonesArray.h"
  header "THashList.h"
  header "TExMap.h"
  header "TObjectTable.h"
  header "TMap.h"
  header "TBits.h"
  header "TObjArray.h"
  header "TCollectionProxyInfo.h"
  header "TList.h"
  header "TClassTable.h"
  header "TIterator.h"
  header "TSeqCollection.h"
  header "TCollection.h"
  header "THashTable.h"
//} // because of cyclic dependencies
//module core_thread {
//  export core_base
//  export *
  header "PosixThreadInc.h"
  header "TSemaphore.h"
  header "TPosixMutex.h"
  header "TMutexImp.h"
  header "TThread.h"
  header "TThreadPool.h"
  header "TThreadFactory.h"
  header "TPosixThreadFactory.h"
  header "TConditionImp.h"
  header "TAtomicCount.h"
  header "TThreadImp.h"
  header "TCondition.h"
  header "TRWLock.h"
  //header "TAtomicCountPthread.h" // never included itself
  header "TPosixThread.h"
  header "TPosixCondition.h"
  header "TMutex.h"
  header "ThreadLocalStorage.h"
  //header "TAtomicCountGcc.h" // never included itself
}

module math_unuran {
  export *
  header "TUnuranSampler.h"
  header "TUnuranBaseDist.h"
  header "TUnuranContDist.h"
  header "TUnuranMultiContDist.h"
  header "TUnuranEmpDist.h"
  header "TUnuranDiscrDist.h"
  header "TUnuran.h"
}
module math_physics {
  export *
  header "TRolke.h"
  header "TRotation.h"
  header "TFeldmanCousins.h"
  header "TVector2.h"
  header "TLorentzRotation.h"
  header "TLorentzVector.h"
  header "TQuaternion.h"
  header "TGenPhaseSpace.h"
  header "TVector3.h"
  header "TRobustEstimator.h"
}
module net_rpddefs {
  header "rpddefs.h"
  export *
}
module net_rpdutils {
  export *
  header "rpderr.h"
  header "rpdconn.h"
  header "rpdpriv.h"
  header "rpdp.h"
}
module hist_hbook {
  export *
  header "THbookFile.h"
  header "THbookTree.h"
  header "THbookBranch.h"
  header "THbookKey.h"
}
module hist_spectrum {
  export *
  header "TSpectrum2Transform.h"
  header "TSpectrumFit.h"
  header "TSpectrum2Fit.h"
  header "TSpectrum.h"
  header "TSpectrum2.h"
  header "TSpectrum3.h"
  header "TSpectrumTransform.h"
}
module graf2d_fitsio {
  export *
  header "TFITS.h"
}
module misc_memstat {
  export *
  header "TMemStatBacktrace.h"
  header "TMemStat.h"
  header "TMemStatHook.h"
  header "TMemStatMng.h"
  header "TMemStatHelpers.h"
  header "TMemStatDef.h"
}
module math_fumili {
  export *
  header "TFumili.h"
  header "TFumiliMinimizer.h"
}

module NetErrors {
  header "NetErrors.h"
  export *
}

module net_net {
  export *
  header "TPSocket.h"
  header "TGridJobStatus.h"
  header "TSQLMonitoring.h"
  header "TGridJDL.h"
  header "TApplicationServer.h"
  header "TGrid.h"
  header "TMonitor.h"
  header "TSQLServer.h"
  header "TGridResult.h"
  header "TApplicationRemote.h"
  header "TS3HTTPRequest.h"
  header "TWebFile.h"
  header "TUDPSocket.h"
  header "TNetFileStager.h"
  header "TSecContext.h"
  header "TFileStager.h"
  header "TGridJob.h"
  header "TSocket.h"
  header "TSQLRow.h"
  header "TSQLResult.h"
  header "TMessage.h"
  header "TSQLStatement.h"
  header "TSSLSocket.h"
  header "TFTP.h"
  header "TPServerSocket.h"
  header "TParallelMergingFile.h"
  header "TGridCollection.h"
  header "TSQLTableInfo.h"
  header "TNetFile.h"
  header "TSQLColumnInfo.h"
  header "TS3WebFile.h"
  header "TServerSocket.h"
  header "TGridJobStatusList.h"
  header "RRemoteProtocol.h"
}
module math_foam {
  export *
  header "TFoamMaxwt.h"
  header "TFoamCell.h"
  header "TFoam.h"
  header "TFoamIntegrand.h"
  header "TFoamVect.h"
  header "TFoamSampler.h"
}
module graf2d_asimage {
  export *
  header "TASImage.h"
  header "TASPaletteEditor.h"
  header "TASImagePlugin.h"
  header "TASPluginGS.h"
}
module core_clib [extern_c] {
  //export *
  header "Demangle.h"
  header "snprintf.h"
  header "strlcpy.h"
  textual header "mmconfig.h"
  textual header "mmalloc.h" // enabling this leads to clashing macro PTR with Clang's Expr.h
  textual header "mmprivate.h" // enabling this + enabling TMapFile leads to clashing macro BLOCK with Clang's DeclNode.inc
}
module bindings_pyroot {
  export *
  header "TPySelector.h"
  header "TPyException.h"
  header "TPyArg.h"
  header "TPyDispatcher.h"
  header "TPyReturn.h"
  header "TPython.h"
  header "TPyROOTApplication.h"
  header "TPyFitFunction.h"
}
module TreeFormula {
  header "TTreeFormula.h"
  export *
}
module TreeIndex {
  header "TTreeIndex.h"
  export *
}
module ChainIndex {
  header "TChainIndex.h"
  export *
}
module tree_treeplayer {
  export *
  header "TSelectorEntries.h"
  header "TFriendProxy.h"
  header "TBranchProxyDirector.h"
  header "TRefProxy.h"
  header "TBranchProxyTemplate.h"
  header "TTreeReader.h"
  header "TFriendProxyDescriptor.h"
  header "TFormLeafInfoReference.h"
  header "TTreeReaderUtils.h"
  header "TFileDrawMap.h"
  header "TTreePerfStats.h"
  header "TFormLeafInfo.h"
  header "TBranchProxyDescriptor.h"
  header "TBranchProxyClassDescriptor.h"
  header "TTreeReaderArray.h"
  header "TTreePlayer.h"
  header "TTreeDrawArgsParser.h"
  header "TTreeTableInterface.h"
  header "TTreeProxyGenerator.h"
  header "TTreeFormulaManager.h"
  header "TBranchProxy.h"
  header "TRefArrayProxy.h"
  header "TTreeReaderValue.h"
  header "TSelectorDraw.h"
}
module math_genvector {
  export *
  header "Math/Point3Dfwd.h"
  header "Math/Quaternion.h"
  header "Math/Vector3D.h"
  header "Math/BoostY.h"
  header "Math/RotationY.h"
  header "Math/PositionVector3D.h"
  header "Math/PtEtaPhiM4D.h"
  header "Math/Point2Dfwd.h"
  header "Math/Boost.h"
  header "Math/Plane3D.h"
  header "Math/GenVector/PxPyPzE4Dfwd.h"
  header "Math/GenVector/Quaternion.h"
  header "Math/GenVector/RotationXfwd.h"
  header "Math/GenVector/BoostY.h"
  header "Math/GenVector/RotationY.h"
  header "Math/GenVector/PositionVector3D.h"
  header "Math/GenVector/RotationYfwd.h"
  header "Math/GenVector/PtEtaPhiM4D.h"
  header "Math/GenVector/LorentzRotationfwd.h"
  header "Math/GenVector/Boost.h"
  header "Math/GenVector/Plane3D.h"
  header "Math/GenVector/LorentzVector.h"
  header "Math/GenVector/3DDistances.h"
  header "Math/GenVector/RotationZfwd.h"
  header "Math/GenVector/BoostZ.h"
  header "Math/GenVector/Transform3D.h"
  header "Math/GenVector/GenVector_exception.h"
  header "Math/GenVector/Cylindrical3D.h"
  header "Math/GenVector/PtEtaPhiE4D.h"
  header "Math/GenVector/etaMax.h"
  header "Math/GenVector/BoostX.h"
  header "Math/GenVector/BoostXfwd.h"
  header "Math/GenVector/BoostYfwd.h"
  header "Math/GenVector/Cartesian3D.h"
  header "Math/GenVector/PositionVector2Dfwd.h"
  header "Math/GenVector/DisplacementVector2D.h"
  header "Math/GenVector/RotationZ.h"
  header "Math/GenVector/Rotation3D.h"
  header "Math/GenVector/eta.h"
  header "Math/GenVector/CylindricalEta3Dfwd.h"
  header "Math/GenVector/LorentzVectorfwd.h"
  header "Math/GenVector/Cartesian2Dfwd.h"
  header "Math/GenVector/Quaternionfwd.h"
  header "Math/GenVector/RotationX.h"
  header "Math/GenVector/Polar3D.h"
  header "Math/GenVector/PxPyPzM4D.h"
  header "Math/GenVector/Cartesian2D.h"
  header "Math/GenVector/DisplacementVector2Dfwd.h"
  header "Math/GenVector/BoostZfwd.h"
  header "Math/GenVector/RotationZYXfwd.h"
  header "Math/GenVector/DisplacementVector3D.h"
  header "Math/GenVector/PositionVector3Dfwd.h"
  header "Math/GenVector/EulerAngles.h"
  header "Math/GenVector/PxPyPzE4D.h"
  header "Math/GenVector/LorentzRotation.h"
  header "Math/GenVector/CylindricalEta3D.h"
  header "Math/GenVector/Polar2D.h"
  header "Math/GenVector/PositionVector2D.h"
  header "Math/GenVector/CoordinateSystemTags.h"
  header "Math/GenVector/RotationZYX.h"
  header "Math/GenVector/Rotation3Dfwd.h"
  header "Math/GenVector/AxisAnglefwd.h"
  header "Math/GenVector/AxisAngle.h"
  header "Math/GenVector/Polar3Dfwd.h"
  header "Math/GenVector/DisplacementVector3Dfwd.h"
  header "Math/GenVector/Boostfwd.h"
  header "Math/GenVector/Translation3D.h"
  header "Math/GenVector/VectorUtil.h"
  header "Math/GenVector/Cartesian3Dfwd.h"
  header "Math/GenVector/GenVectorIO.h"
  header "Math/GenVector/BitReproducible.h"
  header "Math/GenVector/Cylindrical3Dfwd.h"
  header "Math/GenVector/PtEtaPhiM4Dfwd.h"
  header "Math/GenVector/PxPyPzM4Dfwd.h"
  header "Math/GenVector/3DConversions.h"
  header "Math/GenVector/PtEtaPhiE4Dfwd.h"
  header "Math/GenVector/Polar2Dfwd.h"
  header "Math/GenVector/EulerAnglesfwd.h"
  header "Math/LorentzVector.h"
  header "Math/Vector3Dfwd.h"
  header "Math/BoostZ.h"
  header "Math/Vector2D.h"
  header "Math/Point2D.h"
  header "Math/Transform3D.h"
  header "Math/Cylindrical3D.h"
  header "Math/PtEtaPhiE4D.h"
  header "Math/BoostX.h"
  header "Math/Vector2Dfwd.h"
  header "Math/Cartesian3D.h"
  header "Math/DisplacementVector2D.h"
  header "Math/RotationZ.h"
  header "Math/Rotation3D.h"
  header "Math/Point3D.h"
  header "Math/RotationX.h"
  header "Math/Polar3D.h"
  header "Math/PxPyPzM4D.h"
  header "Math/Cartesian2D.h"
  header "Math/Vector4D.h"
  header "Math/DisplacementVector3D.h"
  header "Math/EulerAngles.h"
  header "Math/PxPyPzE4D.h"
  header "Math/LorentzRotation.h"
  header "Math/CylindricalEta3D.h"
  header "Math/Polar2D.h"
  header "Math/PositionVector2D.h"
  header "Math/RotationZYX.h"
  header "Math/AxisAngle.h"
  header "Math/Vector4Dfwd.h"
  header "Math/Translation3D.h"
  header "Math/VectorUtil.h"
}
module math_quadp {
  export *
  header "TQpVar.h"
  header "TQpResidual.h"
  header "TQpDataDens.h"
  header "TQpProbSparse.h"
  header "TMehrotraSolver.h"
  header "TQpSolverBase.h"
  header "TQpProbDens.h"
  header "TQpLinSolverBase.h"
  header "TQpDataSparse.h"
  header "TQpLinSolverSparse.h"
  header "TQpDataBase.h"
  header "TGondzioSolver.h"
  header "TQpProbBase.h"
  header "TQpLinSolverDens.h"
}
module core_zip [extern_c] {
  export *
  header "Compression.h"
  header "RZip.h"
}

module Pad {
  header "TPad.h"
  header "TAttCanvas.h"
  export *
}
module graf2d_gpad {
  export *
  header "TControlBarButton.h"
  header "TColorWheel.h"
  header "TButton.h"
  header "TInspectCanvas.h"
  header "TCreatePrimitives.h"
  header "TGroupButton.h"
  header "TSliderBox.h"
  header "TViewer3DPad.h"
  header "TPadPainter.h"
  header "TView.h"
  header "TControlBar.h"
  header "TDialogCanvas.h"
  header "TClassTree.h"
  header "TPaveClass.h"
  header "TSlider.h"
}
module misc_table {
  export *
  header "TPoints3D.h"
  header "TCernLib.h"
  header "TVolumePosition.h"
  header "TObjectSet.h"
  header "TTableDescriptor.h"
  header "TTable3Points.h"
  header "TPolyLineShape.h"
  header "Ttypes.h"
  header "TFileSet.h"
  header "TTablePadView3D.h"
  header "TTablePoints.h"
  header "TIndexTable.h"
  header "TTableSorter.h"
  header "tableDescriptor.h"
  header "TResponseTable.h"
  header "TDsKey.h"
  header "TVolume.h"
  header "TVolumeView.h"
  header "TDataSet.h"
  header "TGenericTable.h"
  header "TFileIter.h"
  header "TColumnView.h"
  header "TVolumeViewIter.h"
  header "TPointsArray3D.h"
  header "TChair.h"
  header "TTable.h"
  header "TTableIter.h"
  header "TDataSetIter.h"
  header "TTableMap.h"
}
module gui_gui {
  export *
  header "TGColorDialog.h"
  header "TRootEmbeddedCanvas.h"
  header "TGTextEditDialogs.h"
  header "TGMdi.h"
  header "TGSlider.h"
  header "TGSplitter.h"
  header "TGSimpleTable.h"
  header "TGGC.h"
  header "HelpText.h"
  header "TGTripleSlider.h"
  header "TGListView.h"
  header "TGImageMap.h"
  header "TGMimeTypes.h"
  header "TGShutter.h"
  header "TRootBrowser.h"
  header "TGMenu.h"
  header "TGDoubleSlider.h"
  header "TRootCanvas.h"
  header "TGView.h"
  header "TGTableContainer.h"
  header "TGWidget.h"
  header "TGPicture.h"
  header "TGLayout.h"
  header "TGFileBrowser.h"
  header "TGSimpleTableInterface.h"
  header "TGDockableFrame.h"
  header "TRootDialog.h"
  header "TGTable.h"
  header "TGToolTip.h"
  header "TGToolBar.h"
  header "TGTextEntry.h"
  header "TGApplication.h"
  header "TGIcon.h"
  header "TGClient.h"
  header "TGFont.h"
  header "TGStatusBar.h"
  header "TGRedirectOutputGuard.h"
  header "TRootControlBar.h"
  header "TGShapedFrame.h"
  header "TGTab.h"
  header "TGWindow.h"
  header "TGFileDialog.h"
  header "TG3DLine.h"
  header "TGTableLayout.h"
  header "TGScrollBar.h"
  header "TGText.h"
  header "TRootBrowserLite.h"
  header "TGListBox.h"
  header "TGNumberEntry.h"
  header "TVirtualDragManager.h"
  header "TGMdiDecorFrame.h"
  header "TGObject.h"
  header "TGTextBuffer.h"
  header "TRootContextMenu.h"
  header "TGXYLayout.h"
  header "TGIdleHandler.h"
  header "TGDNDManager.h"
  header "TGFSContainer.h"
  header "TRootHelpDialog.h"
  header "TGPack.h"
  header "TGResourcePool.h"
  header "WidgetMessageTypes.h"
  header "TGMdiFrame.h"
  header "TGDimension.h"
  header "TGCommandPlugin.h"
  header "TGFrame.h"
  header "TGString.h"
  header "TGCanvas.h"
  header "TGSpeedo.h"
  header "TGTableHeader.h"
  header "TRootApplication.h"
  header "TGTextEditor.h"
  header "TGColorSelect.h"
  header "TGTextView.h"
  header "TGEventHandler.h"
  header "TGListTree.h"
  header "TGLabel.h"
  header "TGTextEdit.h"
  header "TGMsgBox.h"
  header "TGButton.h"
  header "TGProgressBar.h"
  header "TGPasswdDialog.h"
  header "TGSplitFrame.h"
  header "TGComboBox.h"
  header "TRootGuiFactory.h"
  header "TGFSComboBox.h"
  header "TGMdiMenu.h"
  header "TGInputDialog.h"
  header "TGMdiMainFrame.h"
  header "TGuiBuilder.h"
  header "TGFontDialog.h"
  header "TGTableCell.h"
  header "TGButtonGroup.h"
}
module graf2d_x11ttf {
  export *
  header "TGX11TTF.h"
}
module io_xmlparser {
  export *
  header "TXMLParser.h"
  header "TXMLNode.h"
  header "TDOMParser.h"
  header "TSAXParser.h"
  header "TXMLAttr.h"
  header "TXMLDocument.h"
}
module montecarlo_eg {
  export *
  header "TDecayChannel.h"
  header "TParticlePDG.h"
  //header "Hepevt.h" // leads to multiple definitions of hepevt_
  header "TPrimary.h"
  header "cfortran.h"
  header "TParticle.h"
  header "TVirtualMCDecayer.h"
  header "TGenerator.h"
  header "TParticleClassPDG.h"
  header "TAttParticle.h"
  header "TDatabasePDG.h"
}
module graf2d_postscript {
  export *
  header "TSVG.h"
  header "TPostScript.h"
  header "TPDF.h"
  header "TTeXDump.h"
  header "TImageDump.h"
}
module graf2d_gviz {
  export *
  header "TGraphEdge.h"
  header "TGraphNode.h"
  header "TGraphStruct.h"
}
module TProofSuperMaster {
  header "TProofSuperMaster.h"
  export *
}
module proof_proof {
  export *
  header "TProofLite.h"
  header "TDataSetManagerFile.h"
  header "TProofQueryResult.h"
  header "TProofCondor.h"
  header "TProofDebug.h"
  header "TProofLog.h"
  header "TDataSetManager.h"
  header "TSelVerifyDataSet.h"
  header "TProofResources.h"
  header "TProofServ.h"
  header "TProofProgressStatus.h"
  header "TProofResourcesStatic.h"
  header "TSlaveLite.h"
  header "TQueryResultManager.h"
  header "TProofChain.h"
  header "TProofOutputList.h"
  header "TDSet.h"
  header "TProofServLite.h"
  header "TVirtualProofPlayer.h"
  header "TProofNodeInfo.h"
  header "TDSetProxy.h"
  header "TProofMgrLite.h"
  header "TSlave.h"
  header "TProofMgr.h"
  header "TDataSetManagerAliEn.h"
  header "TProofOutputFile.h"
  header "TProof.h"
  header "TCondor.h"
}
module proof_pq2 {
  export *
  header "pq2ping.h"
  header "redirguard.h"
  header "pq2actions.h"
  header "pq2wrappers.h"
}
module math_mathcore {
  export *
  header "TRandom.h"
  header "TRandom2.h"
  header "TStatistic.h"
  header "TKDTree.h"
  header "Math/BrentMinimizer1D.h"
  header "Math/IFunctionfwd.h"
  header "Math/TDataPointN.h"
  header "Math/VirtualIntegrator.h"
  header "Math/ProbFuncMathCore.h"
  header "Math/Util.h"
  header "Math/KDTree.h"
  header "Math/BasicMinimizer.h"
  header "Math/IMinimizer1D.h"
  header "Math/GenAlgoOptions.h"
  header "Math/BrentRootFinder.h"
  header "Math/ProbFunc.h"
  header "Math/GaussLegendreIntegrator.h"
  header "Math/ParamFunctor.h"
  header "Math/WrappedParamFunction.h"
  header "Math/Math.h"
  header "Math/RootFinder.h"
  header "Math/MinimizerVariableTransformation.h"
  header "Math/MinimTransformFunction.h"
  header "Math/DistSamplerOptions.h"
  header "Math/RichardsonDerivator.h"
  header "Math/QuantFunc.h"
  header "Math/MinimizerOptions.h"
  header "Math/PdfFunc.h"
  header "Math/TDataPoint.h"
  header "Math/FitMethodFunction.h"
  header "Math/IntegratorMultiDim.h"
  header "Math/MinimTransformVariable.h"
  header "Math/AdaptiveIntegratorMultiDim.h"
  header "Math/IParamFunction.h"
  header "Math/WrappedFunction.h"
  header "Math/QuantFuncMathCore.h"
  header "Math/OneDimFunctionAdapter.h"
  header "Math/IParamFunctionfwd.h"
  header "Math/DistSampler.h"
  header "Math/Error.h"
  header "Math/AllIntegrationTypes.h"
  header "Math/Minimizer.h"
  header "Math/ChebyshevPol.h"
  header "Math/BrentMethods.h"
  header "Math/Functor.h"
  header "Math/DistFuncMathCore.h"
  header "Math/GoFTest.h"
  header "Math/Integrator.h"
  header "Math/IOptions.h"
  header "Math/GaussIntegrator.h"
  header "Math/SpecFuncMathCore.h"
  header "Math/IFunction.h"
  header "Math/SpecFunc.h"
  header "Math/PdfFuncMathCore.h"
  header "Math/IRootFinderMethod.h"
  header "Math/MultiDimParamFunctionAdapter.h"
  header "Math/DistFunc.h"
  header "Math/IntegratorOptions.h"
  header "Math/Factory.h"
  header "Fit/FitUtil.h"
  header "Fit/DataVectorfwd.h"
  header "Fit/FitUtilParallel.h"
  header "Fit/PoissonLikelihoodFCN.h"
  header "Fit/UnBinData.h"
  header "Fit/Chi2FCN.h"
  header "Fit/DataVector.h"
  header "Fit/SparseData.h"
  header "Fit/DataRange.h"
  header "Fit/FitResult.h"
  header "Fit/DataOptions.h"
  header "Fit/FcnAdapter.h"
  header "Fit/BinPoint.h"
  header "Fit/ParameterSettings.h"
  header "Fit/LogLikelihoodFCN.h"
  header "Fit/BinData.h"
  header "Fit/Fitter.h"
  header "Fit/FitConfig.h"
  header "TKDTreeBinning.h"
  header "TComplex.h"
  header "TRandom1.h"
  header "TMath.h"
  header "TRandom3.h"
}
/*module math_minuit {
  export *
  header "TLinearFitter.h" // Bug in clang MethodInfoMap.count(OverriddenMD) && "Did not find the overridden method!
  header "TLinearMinimizer.h"
  header "TMinuit.h"
  header "TMinuitMinimizer.h" // Bug in clang MethodInfoMap.count(OverriddenMD) && "Did not find the overridden method!
  header "TFitter.h"
}*/
module montecarlo_vmc {
  export *
  header "TMCParticleType.h"
  header "TPDGCode.h"
  header "TVirtualMCApplication.h"
  header "TVirtualMCGeometry.h"
  header "TGeoMCGeometry.h"
  header "TVirtualMC.h"
  header "TVirtualMCStack.h"
  header "TMCtls.h"
  header "TMCProcess.h"
  header "TMCOptical.h"
  header "TMCVerbose.h"
}
module MapFile {
  export *
  header "TMapFile.h"
}
module io_io {
  //export core_thread // i.e missing module causes a crash...
  export *
  header "TArchiveFile.h"
  header "TBufferFile.h"
  header "TGenCollectionProxy.h"
  header "TStreamerInfo.h"
  header "TMakeProject.h"
  header "TEmulatedCollectionProxy.h"
  header "TEmulatedMapProxy.h"
  header "TZIPFile.h"
  header "TVirtualObject.h"
  header "TFPBlock.h"
  header "TVirtualCollectionIterators.h"
  header "TCollectionProxyFactory.h"
  header "TContainerConverters.h"
  header "TVirtualArray.h"
  header "TFile.h"
  header "TFree.h"
  header "TGenCollectionStreamer.h"
  header "TFileCacheRead.h"
  header "TKey.h"
  header "TDirectoryFile.h"
  header "TFilePrefetch.h"
  header "TFileCacheWrite.h"
  header "TFileMerger.h"
  header "TKeyMapFile.h"
  header "TStreamerInfoActions.h"
  header "TLockFile.h"
  header "TMemFile.h"
}
module geom_geombuilder {
  export *
  header "TGeoMediumEditor.h"
  header "TGeoEltuEditor.h"
  header "TGeoHypeEditor.h"
  header "TGeoPconEditor.h"
  header "TGeoTubeEditor.h"
  header "TGeoTabManager.h"
  header "TGeoPgonEditor.h"
  header "TGeoVolumeEditor.h"
  header "TGeoTorusEditor.h"
  header "TGeoConeEditor.h"
  header "TGeoTrd2Editor.h"
  header "TGeoMatrixEditor.h"
  header "TGeoTrd1Editor.h"
  header "TGeoGedFrame.h"
  header "TGeoMaterialEditor.h"
  header "TGeoBBoxEditor.h"
  header "TGeoTrapEditor.h"
  header "TGeoNodeEditor.h"
  header "TGeoParaEditor.h"
  header "TGeoManagerEditor.h"
  header "TGeoSphereEditor.h"
}
module graf2d_qt {
  export *
  header "TQtRootSlot.h"
  header "TQtBrush.h"
  header "TQtClientFilter.h"
  header "TQMimeTypes.h"
  header "TQtRConfig.h"
  header "TQtEmitter.h"
  header "TGQt.h"
  header "TObjectExecute.h"
  header "TQtPadFont.h"
  header "TQtMarker.h"
  header "TQtRootApplication.h"
  header "TQtLock.h"
  header "TQtWidget.h"
  header "TWaitCondition.h"
  header "TQtSymbolCodec.h"
  header "TQtApplication.h"
  header "TQtUtil.h"
  header "TQtEvent.h"
  header "TQtPen.h"
  header "TQtTimer.h"
  header "TQtClientGuard.h"
  header "TQtCanvasPainter.h"
  header "TQtEventQueue.h"
  header "TQUserEvent.h"
  header "TQtLockGuard.h"
  header "TVirtualX.interface.h"
  header "TQtClientWidget.h"
}
module graf3d_g3d {
  requires cplusplus
  export *
  header "TCONE.h"
  header "TShape.h"
  header "TPolyMarker3D.h"
  header "THYPE.h"
  header "TSPHE.h"
  header "TTRD1.h"
  header "TGeometry.h"
  header "TPCON.h"
  header "TGTRA.h"
  header "TMixture.h"
  header "TTUBE.h"
  header "TPARA.h"
  header "TPoints3DABC.h"
  header "TPointSet3D.h"
  header "TXTRU.h"
  header "TAxis3D.h"
  header "TPolyLine3D.h"
  header "TView3D.h"
  header "TMaterial.h"
  header "X3DBuffer.h"
  header "TCTUB.h"
  header "TTRD2.h"
  header "TTUBS.h"
  header "TMarker3DBox.h"
  header "TCONS.h"
  header "TNodeDiv.h"
  header "TTRAP.h"
  header "TNode.h"
  header "TELTU.h"
  header "TRotMatrix.h"
  header "THelix.h"
  header "TBRIK.h"
  header "TPGON.h"
}
module graf3d_gviz3d {
  export *
  header "TStructNode.h"
  header "TStructNodeProperty.h"
  header "TStructNodeEditor.h"
  header "TStructViewerGUI.h"
  header "TStructViewer.h"
}
module roofit_histfactory {
  export *
  header "RooStats/HistFactory/ParamHistFunc.h"
  header "RooStats/HistFactory/HistFactoryModelUtils.h"
  header "RooStats/HistFactory/EstimateSummary.h"
  header "RooStats/HistFactory/HistoToWorkspaceFactoryFast.h"
  header "RooStats/HistFactory/HistRef.h"
  header "RooStats/HistFactory/RooBarlowBeestonLL.h"
  header "RooStats/HistFactory/Data.h"
  header "RooStats/HistFactory/HistFactorySimultaneous.h"
  header "RooStats/HistFactory/PiecewiseInterpolation.h"
  header "RooStats/HistFactory/HistoToWorkspaceFactory.h"
  header "RooStats/HistFactory/MakeModelAndMeasurementsFast.h"
  header "RooStats/HistFactory/Asimov.h"
  header "RooStats/HistFactory/ConfigParser.h"
  header "RooStats/HistFactory/HistFactoryException.h"
  header "RooStats/HistFactory/Sample.h"
  header "RooStats/HistFactory/PreprocessFunction.h"
  header "RooStats/HistFactory/Channel.h"
  header "RooStats/HistFactory/FlexibleInterpVar.h"
  header "RooStats/HistFactory/Measurement.h"
  header "RooStats/HistFactory/HistFactoryNavigation.h"
  header "RooStats/HistFactory/LinInterpVar.h"
  header "RooStats/HistFactory/Systematics.h"
}
module math_mlp {
  export *
  header "TNeuron.h"
  header "TMLPAnalyzer.h"
  header "TMultiLayerPerceptron.h"
  header "TSynapse.h"
}
/*module math_matrix {
  export *
  header "TMatrixTSymCramerInv.h"
  header "TMatrix.h"
  header "TMatrixTUtils.h"
  header "TMatrixD.h"
  header "TMatrixTCramerInv.h"
  //header "TMatrixTSym.h" // See http://llvm.org/bugs/show_bug.cgi?id=21547
  header "TMatrixFSymfwd.h"
  header "TVectorF.h"
  header "TVectorFfwd.h"
  header "TMatrixDSymfwd.h"
  header "TDecompLU.h"
  textual header "TMatrixTSparse.h" // See http://llvm.org/bugs/show_bug.cgi?id=21547
  header "TMatrixDUtilsfwd.h"
  header "TMatrixFSparse.h"
  header "TMatrixTBase.h"
  header "TVectorD.h"
  header "TMatrixF.h"
  header "TVectorT.h"
  header "TMatrixDSym.h"
  header "TMatrixDUtils.h"
  header "TMatrixDLazy.h"
  header "TVector.h"
  header "TMatrixDSparsefwd.h"
  header "TDecompSVD.h"
  header "TMatrixFUtils.h"
  header "TMatrixDEigen.h"
  header "TDecompBase.h"
  header "TMatrixFUtilsfwd.h"
  header "TVectorfwd.h"
  header "TMatrixFSym.h"
  header "TMatrixDfwd.h"
  header "TDecompSparse.h"
  header "TMatrixFBasefwd.h"
  header "TMatrixDSymEigen.h"
  header "TMatrixDBase.h"
  header "TMatrixFSparsefwd.h"
  header "TDecompChol.h"
  header "TMatrixTLazy.h"
  header "TDecompBK.h"
  header "TMatrixFBase.h"
  header "TMatrixFLazy.h"
  header "TMatrixFfwd.h"
  header "TMatrixDSparse.h"
  header "TMatrixDBasefwd.h"
  //header "TMatrixT.h" // See http://llvm.org/bugs/show_bug.cgi?id=21547
  header "TDecompQRH.h"
  header "TVectorDfwd.h"
}*/

module gui_qtgsi {
  export *
  header "TQRootApplication.h"
  header "TQRootCanvas.h"
  header "TQApplication.h"
  header "TQRootDialog.h"
  header "TQCanvasMenu.h"
  header "TQCanvasImp.h"
  header "TQRootGuiFactory.h"
}
module sql_mysql {
  export *
  header "TMySQLStatement.h"
  header "TMySQLRow.h"
  header "TMySQLResult.h"
  header "TMySQLServer.h"
}
module hist_hist {
  export *
  header "TF12.h"
  header "TLimitDataSource.h"
  header "TGraph2DErrors.h"
  header "TH3I.h"
  header "TSVDUnfold.h"
  header "TProfile2D.h"
  header "TF1.h"
  header "TMultiGraph.h"
  header "TFitResult.h"
  header "TH1S.h"
  header "TFormula.h"
  header "TUnfoldDensity.h"
  header "TH2F.h"
  header "TH2C.h"
  header "TNDArray.h"
  header "TH1I.h"
  header "THnSparse.h"
  header "TH3F.h"
  header "TH3.h"
  header "TH1C.h"
  header "TH2Poly.h"
  header "TF3.h"
  header "TGraphBentErrors.h"
  header "TUnfoldSys.h"
  header "TFractionFitter.h"
  header "TH3D.h"
  header "TH1F.h"
  header "TGraphSmooth.h"
  header "HFitInterface.h"
  header "TKDE.h"
  header "TVirtualGraphPainter.h"
  header "Math/WrappedMultiTF1.h"
  header "Math/WrappedTF1.h"
  header "TH1K.h"
  header "TH2D.h"
  header "TH1.h"
  header "THn.h"
  header "THnSparse_Internal.h"
  header "TMultiDimFit.h"
  header "TPrincipal.h"
  header "TSpline.h"
  header "TH2S.h"
  header "TUnfold.h"
  header "TAxis.h"
  header "THLimitsFinder.h"
  header "TH3S.h"
  header "TH2.h"
  header "TGraphDelaunay.h"
  header "TProfile.h"
  header "THStack.h"
  header "TUnfoldBinning.h"
  header "TH1D.h"
  header "Foption.h"
  header "TGraph2D.h"
  header "TGraphErrors.h"
  header "THnBase.h"
  header "TFitResultPtr.h"
  header "TGraphTime.h"
  header "TGraphAsymmErrors.h"
  header "TPolyMarker.h"
  header "TH2I.h"
  header "TF2.h"
  header "TVirtualHistPainter.h"
  header "TVirtualFitter.h"
  header "TEfficiency.h"
  header "TProfile3D.h"
  header "TLimit.h"
  header "TH3C.h"
  header "TGraph.h"
  header "TBinomialEfficiencyFitter.h"
  header "TFormulaPrimitive.h"
  header "TBackCompFitter.h"
  header "TConfidenceLevel.h"
}
module net_http {
  export *
  header "TRootSniffer.h"
  header "TBufferJSON.h"
  header "TCivetweb.h"
  header "TFastCgi.h"
  header "THttpEngine.h"
  header "TRootSnifferStore.h"
  header "THttpServer.h"
}
module tree_treeviewer {
  export *
  header "TMemStatShow.h"
  header "TTVLVContainer.h"
  header "TParallelCoordVar.h"
  header "TTreeViewer.h"
  header "TSpiderEditor.h"
  header "TParallelCoord.h"
  header "TSpider.h"
  header "TTVSession.h"
  header "TGTreeTable.h"
  header "TParallelCoordEditor.h"
  header "TParallelCoordRange.h"
  header "HelpTextTV.h"
}
module proof_proofbench {
  export *
  header "TProofBenchRun.h"
  header "TProofBenchDataSet.h"
  header "TProofNodes.h"
  header "TProofBenchRunCPU.h"
  header "TProofBenchRunDataRead.h"
  header "TProofBench.h"
  header "TProofPerfAnalysis.h"
  header "TProofBenchTypes.h"
}
module gui_recorder {
  export *
  header "TRecorder.h"
}
module math_genetic {
  export *
  header "Math/GeneticMinimizer.h"
}
module hist_spectrumpainter {
  export *
  header "TSpectrum2Painter.h"
}
module geom_geom {
  export *
  header "TGeoVolume.h"
  header "TGeoBuilder.h"
  header "TGeoMaterial.h"
  header "TGeoMatrix.h"
  header "TGeoExtension.h"
  header "TGeoEltu.h"
  header "TGeoPgon.h"
  header "TGeoBranchArray.h"
  header "TGeoShapeAssembly.h"
  header "TGeoCone.h"
  header "TGeoNavigator.h"
  header "TGeoMedium.h"
  header "TGeoTrd2.h"
  header "TVirtualGeoPainter.h"
  header "TVirtualGeoTrack.h"
  header "TGeoParaboloid.h"
  header "TGeoTrd1.h"
  header "TGeoPatternFinder.h"
  header "TGeoPcon.h"
  header "TGeoPolygon.h"
  header "TGeoArb8.h"
  header "TVirtualMagField.h"
  header "TGeoGlobalMagField.h"
  header "TGeoPara.h"
  header "TGeoVoxelFinder.h"
  header "TGeoNode.h"
  header "TGeoAtt.h"
  header "TGeoXtru.h"
  header "TGeoSphere.h"
  header "TGeoStateInfo.h"
  header "TGeoBBox.h"
  header "TGeoManager.h"
  header "TGeoTube.h"
  header "TGeoShape.h"
  header "TGeoHype.h"
  header "TGeoScaledShape.h"
  header "TGeoUniformMagField.h"
  header "TGeoCache.h"
  header "TGeoBoolNode.h"
  header "TGeoRCPtr.h"
  header "TGeoHalfSpace.h"
  header "TGeoParallelWorld.h"
  header "TGeoHelix.h"
  header "TGeoCompositeShape.h"
  header "TGeoPhysicalNode.h"
  header "TGeoTorus.h"
  header "TGeoElement.h"
}
module gui_ged {
  export *
  header "TF1Editor.h"
  header "TAttLineEditor.h"
  header "TAttMarkerEditor.h"
  header "TGedMarkerSelect.h"
  header "TCurlyLineEditor.h"
  header "TGedPatternSelect.h"
  header "TStyleDialog.h"
  header "TGedFrame.h"
  header "TFrameEditor.h"
  header "TTextEditor.h"
  header "TH1Editor.h"
  header "TLineEditor.h"
  header "TPieSliceEditor.h"
  header "TFunctionParametersDialog.h"
  header "TCurlyArcEditor.h"
  header "TGedEditor.h"
  header "TH2Editor.h"
  header "TGraphEditor.h"
  header "TStyleManager.h"
  header "TArrowEditor.h"
  header "TStylePreview.h"
  header "HelpSMText.h"
  header "TAttTextEditor.h"
  header "TPaveStatsEditor.h"
  header "TAttFillEditor.h"
  header "TAxisEditor.h"
  header "TPadEditor.h"
  header "TPieEditor.h"
}
module roofit_roostats {
  export *
  header "RooStats/ToyMCSampler.h"
  header "RooStats/HypoTestInverterPlot.h"
  header "RooStats/IntervalCalculator.h"
  header "RooStats/MarkovChain.h"
  header "RooStats/MCMCInterval.h"
  header "RooStats/Heaviside.h"
  header "RooStats/UniformProposal.h"
  header "RooStats/ProfileLikelihoodCalculator.h"
  header "RooStats/MinNLLTestStat.h"
  header "RooStats/NeymanConstruction.h"
  header "RooStats/ModelConfig.h"
  header "RooStats/MaxLikelihoodEstimateTestStat.h"
  header "RooStats/HypoTestCalculatorGeneric.h"
  header "RooStats/HypoTestCalculator.h"
  header "RooStats/HybridCalculator.h"
  header "RooStats/LikelihoodInterval.h"
  header "RooStats/DetailedOutputAggregator.h"
  header "RooStats/HybridResult.h"
  header "RooStats/HypoTestInverter.h"
  header "RooStats/PointSetInterval.h"
  header "RooStats/HybridCalculatorOriginal.h"
  header "RooStats/MCMCIntervalPlot.h"
  header "RooStats/FeldmanCousins.h"
  header "RooStats/MCMCCalculator.h"
  header "RooStats/FrequentistCalculator.h"
  header "RooStats/ConfInterval.h"
  header "RooStats/HypoTestInverterResult.h"
  header "RooStats/SequentialProposal.h"
  header "RooStats/HypoTestInverterOriginal.h"
  header "RooStats/BayesianCalculator.h"
  header "RooStats/ProofConfig.h"
  header "RooStats/UpperLimitMCSModule.h"
  header "RooStats/AsymptoticCalculator.h"
  header "RooStats/ProposalFunction.h"
  header "RooStats/TestStatSampler.h"
  header "RooStats/NumberCountingPdfFactory.h"
  header "RooStats/HLFactory.h"
  header "RooStats/SamplingDistPlot.h"
  header "RooStats/ConfidenceBelt.h"
  header "RooStats/LikelihoodIntervalPlot.h"
  header "RooStats/NumberCountingUtils.h"
  header "RooStats/ToyMCImportanceSampler.h"
  header "RooStats/ProposalHelper.h"
  header "RooStats/MetropolisHastings.h"
  header "RooStats/BernsteinCorrection.h"
  header "RooStats/RatioOfProfiledLikelihoodsTestStat.h"
  header "RooStats/ProfileInspector.h"
  header "RooStats/PdfProposal.h"
  header "RooStats/HypoTestPlot.h"
  header "RooStats/RooStatsUtils.h"
  header "RooStats/NumEventsTestStat.h"
  header "RooStats/ToyMCStudy.h"
  header "RooStats/HybridPlot.h"
  header "RooStats/SimpleLikelihoodRatioTestStat.h"
  header "RooStats/DebuggingSampler.h"
  header "RooStats/SimpleInterval.h"
  header "RooStats/HypoTestResult.h"
  header "RooStats/SPlot.h"
  header "RooStats/ProfileLikelihoodTestStat.h"
  header "RooStats/SamplingDistribution.h"
  header "RooStats/DebuggingTestStat.h"
  header "RooStats/CombinedCalculator.h"
  header "RooStats/TestStatistic.h"
}
module gui_fitpanel {
  export *
  header "TAdvancedGraphicsDialog.h"
  header "TTreeInput.h"
  header "TFitParametersDialog.h"
  header "TFitEditor.h"
}
module math_fftw {
  export *
  header "TFFTRealComplex.h"
  header "TFFTComplex.h"
  header "TFFTReal.h"
  header "TFFTComplexReal.h"
}
module graf2d_x11 {
  export *
  header "TGX11.h"
}
module hist_histpainter {
  export *
  header "TPainter3dAlgorithms.h"
  header "TGraph2DPainter.h"
  header "Hoption.h"
  header "TLego.h"
  header "TGraphPainter.h"
  header "THistPainter.h"
  header "Hparam.h"
  header "TPaletteAxis.h"
}
module graf3d_eve {
  export *
  header "TEveCalo2DGL.h"
  header "TEveTrans.h"
  header "TEveSelection.h"
  header "TEveProjectionManagerEditor.h"
  header "TEveRGBAPaletteEditor.h"
  header "TEveVector.h"
  header "TEveProjectionAxesEditor.h"
  header "TEveDigitSetGL.h"
  header "TEveCaloData.h"
  header "TEveEventManager.h"
  header "TEveStraightLineSetEditor.h"
  header "TEveArrow.h"
  header "TEveArrowEditor.h"
  header "TEveLine.h"
  header "TEveTriangleSet.h"
  header "TEveTrack.h"
  header "TEveGedEditor.h"
  header "TEveCaloLegoEditor.h"
  header "TEveQuadSetGL.h"
  header "TEveVSD.h"
  header "TEveTrackEditor.h"
  header "TEveProjections.h"
  header "TEveWindowManager.h"
  header "TEveWindow.h"
  header "TEveStraightLineSetGL.h"
  header "TEveBox.h"
  header "TEveTriangleSetGL.h"
  header "TEveTextEditor.h"
  header "TEveRGBAPaletteOverlay.h"
  header "TEveGeoNodeEditor.h"
  header "TEveBrowser.h"
  header "TEveShapeEditor.h"
  header "TEveLegoEventHandler.h"
  header "TEvePlot3D.h"
  header "TEveJetCone.h"
  header "TEveText.h"
  header "TEveTransEditor.h"
  header "TEveGValuators.h"
  header "TEveTrackGL.h"
  header "TEveParamList.h"
  header "TEveFrameBoxGL.h"
  header "TEveManager.h"
  header "TEveRGBAPalette.h"
  header "TEveStraightLineSet.h"
  header "TEveCaloVizEditor.h"
  header "TEveTrackProjected.h"
  header "TEveElementEditor.h"
  header "TEveSecondarySelectable.h"
  header "TEveProjectionBases.h"
  header "TEveWindowEditor.h"
  header "TEveProjectionManager.h"
  header "TEvePad.h"
  header "TEvePointSet.h"
  header "TEveCalo3DGL.h"
  header "TEveTrackPropagatorEditor.h"
  header "TEveViewer.h"
  header "TEveProjectionAxesGL.h"
  header "TEvePathMark.h"
  header "TEveTreeTools.h"
  header "TEveElement.h"
  header "TEveTextGL.h"
  header "TEveUtil.h"
  header "TEveGeoShapeExtract.h"
  header "TEvePointSetArrayEditor.h"
  header "TEveViewerListEditor.h"
  header "TEveJetConeEditor.h"
  header "TEveVSDStructs.h"
  header "TEveSceneInfo.h"
  header "TEveTrackProjectedGL.h"
  header "TEveGridStepper.h"
  header "TEveJetConeGL.h"
  header "TEveLineEditor.h"
  header "TEvePolygonSetProjected.h"
  header "TEveBoxSet.h"
  header "TEveBoxSetGL.h"
  header "TEveDigitSetEditor.h"
  header "TEvePolygonSetProjectedGL.h"
  header "TEvePlot3DGL.h"
  header "TEveTriangleSetEditor.h"
  header "TEveProjectionAxes.h"
  header "TEveShape.h"
  header "TEveDigitSet.h"
  header "TEveBoxGL.h"
  header "TEveScalableStraightLineSet.h"
  header "TEveCaloLegoOverlay.h"
  header "TEveChunkManager.h"
  header "TEveCompound.h"
  header "TEveCalo.h"
  header "TEveMacro.h"
  header "TEveCaloLegoGL.h"
  header "TEveTrackPropagator.h"
  header "TEveGridStepperEditor.h"
  header "TEveFrameBox.h"
  header "TEveGeoShape.h"
  header "TEveGeoNode.h"
  header "TEveQuadSet.h"
  header "TEveArrowGL.h"
  header "TEveLineGL.h"
  header "TEveScene.h"
  header "TEveGeoPolyShape.h"
}
module core_rint {
  export *
  header "TRint.h"
  header "TTabCom.h"
}
module roofit_roofit {
  export *
  header "RooCFunction2Binding.h"
  header "RooPolynomial.h"
  header "RooNonCentralChiSquare.h"
  header "RooDstD0BG.h"
  header "RooBCPGenDecay.h"
  header "RooGaussModel.h"
  header "RooUnblindUniform.h"
  header "RooBernstein.h"
  header "RooUnblindPrecision.h"
  header "RooCBShape.h"
  header "RooTFnPdfBinding.h"
  header "RooGaussian.h"
  header "RooSpHarmonic.h"
  header "RooParamHistFunc.h"
  header "RooMathMoreReg.h"
  header "RooPoisson.h"
  header "RooMultiBinomial.h"
  header "RooBMixDecay.h"
  header "RooGExpModel.h"
  header "RooIntegralMorph.h"
  header "RooHistConstraint.h"
  header "RooBifurGauss.h"
  header "RooKeysPdf.h"
  header "Roo2DKeysPdf.h"
  header "RooBreitWigner.h"
  header "RooCFunction4Binding.h"
  header "RooFunctorBinding.h"
  header "RooExponential.h"
  header "RooGamma.h"
  header "RooTFnBinding.h"
  header "Roo2DMomentMorphFunction.h"
  header "RooBlindTools.h"
  header "RooFunctor1DBinding.h"
  header "RooBukinPdf.h"
  header "RooBDecay.h"
  header "Roo1DMomentMorphFunction.h"
  header "RooChiSquarePdf.h"
  header "RooStepFunction.h"
  header "RooNovosibirsk.h"
  header "RooBCPEffDecay.h"
  header "RooDecay.h"
  header "RooChi2MCSModule.h"
  header "RooUnblindOffset.h"
  header "RooCFunction3Binding.h"
  header "RooLandau.h"
  header "RooLognormal.h"
  header "RooNonCPEigenDecay.h"
  header "RooLegendre.h"
  header "RooJeffreysPrior.h"
  header "RooParametricStepFunction.h"
  header "RooMathCoreReg.h"
  header "RooNDKeysPdf.h"
  header "RooCFunction1Binding.h"
  header "RooUniform.h"
  header "RooMomentMorph.h"
  header "RooTMathReg.h"
  header "RooArgusBG.h"
  header "RooVoigtian.h"
  header "RooUnblindCPAsymVar.h"
  header "RooChebychev.h"
}
module tmva {
  export *
  header "TMVA/RuleFit.h"
  header "TMVA/PDEFoamMultiTarget.h"
  header "TMVA/GeneticAlgorithm.h"
  header "TMVA/DecisionTree.h"
  header "TMVA/Results.h"
  header "TMVA/MCFitter.h"
  header "TMVA/SdivSqrtSplusB.h"
  header "TMVA/QuickMVAProbEstimator.h"
  header "TMVA/VariableGaussTransform.h"
  header "TMVA/MethodSVM.h"
  header "TMVA/MethodLikelihood.h"
  header "TMVA/SeparationBase.h"
  header "TMVA/PDEFoamKernelGauss.h"
  header "TMVA/ExpectedErrorPruneTool.h"
  header "TMVA/CCPruner.h"
  header "TMVA/MisClassificationError.h"
  header "TMVA/TSpline1.h"
  header "TMVA/MinuitWrapper.h"
  header "TMVA/PDEFoamDensityBase.h"
  header "TMVA/MsgLogger.h"
  header "TMVA/DecisionTreeNode.h"
  header "TMVA/Tools.h"
  header "TMVA/GiniIndex.h"
  header "TMVA/Timer.h"
  header "TMVA/ConvergenceTest.h"
  header "TMVA/PDEFoamCell.h"
  header "TMVA/BinarySearchTreeNode.h"
  header "TMVA/KDEKernel.h"
  header "TMVA/IMethod.h"
  header "TMVA/Volume.h"
  header "TMVA/ClassInfo.h"
  header "TMVA/ResultsRegression.h"
  header "TMVA/RuleEnsemble.h"
  header "TMVA/PDEFoamVect.h"
  header "TMVA/MethodCFMlpANN_Utils.h"
  header "TMVA/TActivationSigmoid.h"
  header "TMVA/GeneticPopulation.h"
  header "TMVA/DataSetFactory.h"
  header "TMVA/TNeuronInputSqSum.h"
  header "TMVA/RootFinder.h"
  header "TMVA/VariableInfo.h"
  header "TMVA/VariableIdentityTransform.h"
  header "TMVA/PDEFoamKernelTrivial.h"
  header "TMVA/PDEFoamDiscriminantDensity.h"
  header "TMVA/SVEvent.h"
  header "TMVA/MethodANNBase.h"
  header "TMVA/TActivationRadial.h"
  header "TMVA/Option.h"
  header "TMVA/RuleFitParams.h"
  header "TMVA/FitterBase.h"
  header "TMVA/Configurable.h"
  header "TMVA/TSpline2.h"
  header "TMVA/Reader.h"
  header "TMVA/PDEFoamKernelBase.h"
  header "TMVA/MinuitFitter.h"
  header "TMVA/RuleCut.h"
  header "TMVA/OptimizeConfigParameters.h"
  header "TMVA/GeneticGenes.h"
  header "TMVA/Config.h"
  header "TMVA/PDEFoamTarget.h"
  header "TMVA/MethodFDA.h"
  header "TMVA/VariablePCATransform.h"
  header "TMVA/BDTEventWrapper.h"
  header "TMVA/MethodBayesClassifier.h"
  header "TMVA/MethodBDT.h"
  header "TMVA/VariableDecorrTransform.h"
  header "TMVA/ModulekNN.h"
  header "TMVA/CrossEntropy.h"
  header "TMVA/MethodCFMlpANN.h"
  header "TMVA/BinarySearchTree.h"
  header "TMVA/ROCCalc.h"
  header "TMVA/TNeuronInputSum.h"
  header "TMVA/GeneticFitter.h"
  header "TMVA/PDEFoamDecisionTreeDensity.h"
  header "TMVA/TActivation.h"
  header "TMVA/TNeuronInputChooser.h"
  header "TMVA/LDA.h"
  header "TMVA/CostComplexityPruneTool.h"
  header "TMVA/MethodMLP.h"
  header "TMVA/MethodFisher.h"
  header "TMVA/TransformationHandler.h"
  header "TMVA/PDEFoamEvent.h"
  header "TMVA/NodekNN.h"
  header "TMVA/ResultsClassification.h"
  header "TMVA/PDEFoamDecisionTree.h"
  header "TMVA/MethodPDEFoam.h"
  header "TMVA/PDEFoam.h"
  header "TMVA/Node.h"
  header "TMVA/Types.h"
  header "TMVA/MethodBase.h"
  header "TMVA/BinaryTree.h"
  header "TMVA/PDEFoamKernelLinN.h"
  header "TMVA/VariableRearrangeTransform.h"
  header "TMVA/MethodBoost.h"
  header "TMVA/MethodCuts.h"
  header "TMVA/MethodPDERS.h"
  header "TMVA/PDEFoamDiscriminant.h"
  header "TMVA/SimulatedAnnealingFitter.h"
  header "TMVA/TNeuronInputAbs.h"
  header "TMVA/PDEFoamTargetDensity.h"
  header "TMVA/DataInputHandler.h"
  header "TMVA/RegressionVariance.h"
  header "TMVA/IPruneTool.h"
  header "TMVA/ClassifierFactory.h"
  header "TMVA/MethodKNN.h"
  header "TMVA/MethodCategory.h"
  header "TMVA/TActivationTanh.h"
  header "TMVA/VariableNormalizeTransform.h"
  header "TMVA/IFitterTarget.h"
  header "TMVA/TActivationChooser.h"
  header "TMVA/ResultsMulticlass.h"
  header "TMVA/TNeuronInput.h"
  header "TMVA/CCTreeWrapper.h"
  header "TMVA/SimulatedAnnealing.h"
  header "TMVA/MethodHMatrix.h"
  header "TMVA/SVKernelMatrix.h"
  header "TMVA/MethodDT.h"
  header "TMVA/TNeuron.h"
  header "TMVA/DataSetManager.h"
  header "TMVA/Interval.h"
  header "TMVA/SVKernelFunction.h"
  header "TMVA/MethodLD.h"
  header "TMVA/Ranking.h"
  header "TMVA/VariableTransformBase.h"
  header "TMVA/Version.h"
  header "TMVA/PDF.h"
  header "TMVA/PDEFoamEventDensity.h"
  header "TMVA/LogInterval.h"
  header "TMVA/MethodTMlpANN.h"
  header "TMVA/Event.h"
  header "TMVA/DataSet.h"
  header "TMVA/MethodRuleFit.h"
  header "TMVA/MethodCFMlpANN_def.h"
  header "TMVA/MethodCompositeBase.h"
  header "TMVA/Rule.h"
  header "TMVA/TSynapse.h"
  header "TMVA/TActivationIdentity.h"
  header "TMVA/DataSetInfo.h"
  header "TMVA/SVWorkingSet.h"
  header "TMVA/GeneticRange.h"
  header "TMVA/GiniIndexWithLaplace.h"
  header "TMVA/Factory.h"
  header "TMVA/RuleFitAPI.h"
}
// FIXME: These are to build G__ProofPlayer dict, it is putting together proof_proofplayer and proof...
module ProofPlayerLight {
  header "TProofPlayerLite.h"
  export *
}
module Packetizer {
  header "TPacketizer.h"
  header "TPacketizerAdaptive.h"
  export *
}
module proof_proofplayer {
  export *
  header "TProofPlayer.h"
  header "TPacketizerMulti.h"
  header "TProofLimitsFinder.h"
  header "TStatsFeedback.h"
  header "TPacketizerFile.h"
  header "TStatus.h"
  header "TPerfStats.h"
  header "TProofMonSenderML.h"
  header "TPacketizerUnit.h"
  header "TProofDraw.h"
  header "TEventIter.h"
  header "TVirtualPacketizer.h"
  header "TOutputListSelectorDataMap.h"
  header "TProofMonSender.h"
  header "TProofMonSenderSQL.h"
  header "TDrawFeedback.h"
}
module math_mathmore {
  export *
  header "Math/GSLNLSMinimizer.h"
  header "Math/MCIntegrationTypes.h"
  header "Math/GSLRootFinder.h"
  header "Math/GSLRootHelper.h"
  header "Math/GSLQuasiRandom.h"
  header "Math/VavilovAccurateCdf.h"
  header "Math/VavilovAccurateQuantile.h"
  header "Math/GSLMCIntegrator.h"
  header "Math/PdfFuncMathMore.h"
  header "Math/InterpolationTypes.h"
  header "Math/GSLMultiRootFinder.h"
  header "Math/GSLMinimizer.h"
  header "Math/DistFuncMathMore.h"
  header "Math/QuantFuncMathMore.h"
  header "Math/Vavilov.h"
  header "Math/ParamFunction.h"
  header "Math/Derivator.h"
  header "Math/SpecFuncMathMore.h"
  header "Math/QuasiRandom.h"
  header "Math/GSLMinimizer1D.h"
  header "Math/VavilovAccuratePdf.h"
  header "Math/KelvinFunctions.h"
  header "Math/GSLRootFinderDeriv.h"
  header "Math/Interpolator.h"
  header "Math/IntegrationTypes.h"
  header "Math/GSLSimAnMinimizer.h"
  header "Math/MCParameters.h"
  header "Math/MultiNumGradFunction.h"
  header "Math/MultiRootFinder.h"
  header "Math/VavilovFast.h"
  header "Math/ChebyshevApprox.h"
  header "Math/GSLFunctionAdapter.h"
  header "Math/RootFinderAlgorithms.h"
  header "Math/VavilovAccurate.h"
  header "Math/Random.h"
  header "Math/GSLIntegrator.h"
  header "Math/Polynomial.h"
  header "Math/GSLRndmEngines.h"
  header "Math/GSLSimAnnealing.h"
}
module geom_geompainter {
  export *
  header "TGeoPainter.h"
  header "TGeoChecker.h"
  header "TGeoTrack.h"
  header "TGeoOverlap.h"
}
module io_sql {
  export *
  header "TSQLClassInfo.h"
  header "TSQLFile.h"
  header "TSQLObjectData.h"
  header "TSQLStructure.h"
  header "TKeySQL.h"
  header "TBufferSQL2.h"
}
module gui_guibuilder {
  export *
  header "TRootGuiBuilder.h"
  header "TGuiBldGeometryFrame.h"
  header "TGuiBldDragManager.h"
  header "TGuiBldNameFrame.h"
  header "TGuiBldHintsEditor.h"
  header "TGuiBldEditor.h"
  header "TGuiBldHintsButton.h"
}
module math_smatrix {
  export *
  header "Math/MatrixFunctions.h"
  header "Math/Dfinv.h"
  header "Math/SVector.h"
  header "Math/StaticCheck.h"
  header "Math/UnaryOperators.h"
  header "Math/MConfig.h"
  header "Math/BinaryOpPolicy.h"
  header "Math/HelperOps.h"
  header "Math/Functions.h"
  header "Math/Dinv.h"
  header "Math/SMatrixFfwd.h"
  header "Math/SMatrixDfwd.h"
  header "Math/Dsinv.h"
  header "Math/Expression.h"
  header "Math/Dfact.h"
  header "Math/CholeskyDecomp.h"
  header "Math/Dfactir.h"
  header "Math/BinaryOperators.h"
  header "Math/SMatrix.h"
  header "Math/Dsfact.h"
  header "Math/MatrixRepresentationsStatic.h"
}
module core_newdelete {
  export *
  header "MemCheck.h"
}
module graf3d_gl {
  export *
  header "TGLViewerEditor.h"
  header "TGLFaceSet.h"
  header "TGLEventHandler.h"
  header "TGLSceneBase.h"
  header "TGLH2PolyPainter.h"
  header "TGLFormat.h"
  header "TGLClip.h"
  header "TGLOrthoCamera.h"
  header "TGLViewerBase.h"
  header "TGLSelectBuffer.h"
  header "TGLQuadric.h"
  header "TKDEAdapter.h"
  header "TGLPolyLine.h"
  header "TGLBoxPainter.h"
  header "TGLWidget.h"
  header "TGLTF3Painter.h"
  header "TGLFontManager.h"
  header "TGLAdapter.h"
  header "TGLAnnotation.h"
  header "TGLPadUtils.h"
  header "TGLContextPrivate.h"
  header "TGLIncludes.h"
  header "TGLContext.h"
  header "TGLCylinder.h"
  header "TGLSAViewer.h"
  header "TX11GL.h"
  header "TGLVoxelPainter.h"
  header "CsgOps.h"
  header "TGLScenePad.h"
  header "TGLAutoRotator.h"
  header "TGLLegoPainter.h"
  header "TGLTransManip.h"
  header "TGLPShapeObjEditor.h"
  header "TGLCameraOverlay.h"
  header "TGLScene.h"
  header "TGLBoundingBox.h"
  header "TGLAxisPainter.h"
  header "TGLSphere.h"
  header "TKDEFGT.h"
  header "TGLSAFrame.h"
  header "TGL5DDataSetEditor.h"
  header "TGLObject.h"
  header "TGLPadPainter.h"
  header "TGLManipSet.h"
  header "TGLStopwatch.h"
  header "gl2ps.h"
  header "TGLText.h"
  header "TGLPlotPainter.h"
  header "TArcBall.h"
  header "TGLPShapeObj.h"
  header "TGLWSIncludes.h"
  header "TGLClipSetEditor.h"
  header "TGLMarchingCubes.h"
  header "TGLPShapeRef.h"
  header "TGLPolyMarker.h"
  header "TGLPlot3D.h"
  header "TH3GL.h"
  header "TGLScaleManip.h"
  header "TGLRotateManip.h"
  header "TPointSet3DGL.h"
  header "TGLSelectRecord.h"
  header "TGLPlotBox.h"
  header "TGLCameraGuide.h"
  header "TGLManip.h"
  header "TGLLockable.h"
  header "TGLFBO.h"
  header "TGLPlotCamera.h"
  header "TGLTH3Composition.h"
  header "TGLAxis.h"
  header "TF2GL.h"
  header "TGLPerspectiveCamera.h"
  header "TGLSurfacePainter.h"
  header "TGLSceneInfo.h"
  header "TGLParametric.h"
  header "TGLParametricEquationGL.h"
  header "TGLLogicalShape.h"
  header "TGLPhysicalShape.h"
  header "TGLHistPainter.h"
  header "TGL5DPainter.h"
  header "TGL5D.h"
  header "TGLIsoMesh.h"
  header "TH2GL.h"
  header "TGLOverlayButton.h"
  header "TGLRnrCtx.h"
  header "TGLOutput.h"
  header "TGLLightSet.h"
  header "TGLViewer.h"
  header "TGLOverlay.h"
  header "TGLUtil.h"
  header "TGLLightSetEditor.h"
  header "TGLEmbeddedViewer.h"
  header "TGLCamera.h"
}
module core_lzma {
  export *
  header "ZipLZMA.h"
}
module geom_gdml {
  export *
  header "TGDMLWrite.h"
  header "TGDMLParse.h"
}
module core_unix {
  export *
  header "TUnixSystem.h" // ambiguous expansion of macro 'SIGSYS'
}
module io_xml {
  export *
  header "TXMLFile.h"
  header "TKeyXML.h"
  header "TBufferXML.h"
  header "TXMLSetup.h"
  header "TXMLPlayer.h"
  header "TXMLEngine.h"
}
module core_textinput {
  export *
  header "Getline.h"
}
module Tree { // Because we don't want TTreeIndex to be polluted all tree_tree
  header "TBranch.h"
  header "TTree.h"
  header "TVirtualTreePlayer.h"
  export *
}
module tree_tree {
  export *
  header "TEntryListArray.h"
  header "TFriendElement.h"
  header "TLeafB.h"
  header "TBranchElement.h"
  header "TLeafS.h"
  header "TLeafElement.h"
  header "TIndArray.h"
  header "TSelectorScalar.h"
  header "TEntryListFromFile.h"
  header "TBasket.h"
  header "TBranchObject.h"
  header "TNtupleD.h"
  header "TLeafC.h"
  header "TCut.h"
  header "TSelector.h"
  header "TBranchBrowsable.h"
  header "TBranchClones.h"
  header "TBranchRef.h"
  header "TSelectorList.h"
  header "TTreeCloner.h"
  header "TBranchSTL.h"
  header "TreeUtils.h"
  header "TLeafO.h"
  header "TLeafI.h"
  header "TTreeCache.h"
  header "TEventList.h"
  header "TBufferSQL.h"
  header "TTreeSQL.h"
  header "TQueryResult.h"
  header "TLeafL.h"
  header "TEntryList.h"
  header "TLeafObject.h"
  header "TNtuple.h"
  header "TChainElement.h"
  header "TEntryListBlock.h"
  header "TLeaf.h"
  header "TTreeRow.h"
  header "TTreeResult.h"
  header "TTreeCacheUnzip.h"
  header "TLeafD.h"
  header "TBasketSQL.h"
  header "TLeafF.h"
  header "TSelectorCint.h"
  header "TVirtualIndex.h"
  header "TChain.h"
}
module graf2d_graf {
  export *
  header "TGaxis.h"
  header "TLatex.h"
  header "TLink.h"
  //header "TMathText.h" //#  include FT_FREETYPE_H fishy config
  header "TPie.h"
  header "TBox.h"
  header "TMarker.h"
  header "TLine.h"
  header "TGraphPolargram.h"
  header "TPavesText.h"
  header "TCutG.h"
  header "TCurlyArc.h"
  header "TWbox.h"
  header "TArrow.h"
  header "TPoints.h"
  header "TPaveLabel.h"
  header "TCurlyLine.h"
  header "TTF.h"
  header "TLegendEntry.h"
  header "TPaveText.h"
  header "TCrown.h"
  header "TArc.h"
  header "TFrame.h"
  //header "TText.h" // fishy typedefs insanity
  header "TPave.h"
  header "TLegend.h"
  header "TPaveStats.h"
  header "TPieSlice.h"
  header "TGraphQQ.h"
  header "TEllipse.h"
  header "TGraphPolar.h"
  header "TImage.h"
  header "TDiamond.h"
  header "TAttImage.h"
  header "TPolyLine.h"
  header "TImagePlugin.h"
}
module core_metautils {
  export *

  //header "TMetaUtils.h" // AXEL is on it.
  module ClingRuntime {header "TClingRuntime.h" export *}
}
module gui_qtroot {
  export *
  header "TQtRootGuiFactory.h"
}
module sql_sqlite {
  export *
  header "TSQLiteStatement.h"
  header "TSQLiteServer.h"
  header "TSQLiteResult.h"
  header "TSQLiteRow.h"
}
module net_rsa [extern_c] {
  header "rsadef.h"
  header "rsalib.h"
  header "rsafun.h"
  header "rsaaux.h"
  export *
}

module AuthConst {
  header "AuthConst.h"
  export *
}
module net_auth {
  export *
  header "TAuthenticate.h"
  header "THostAuth.h"
  header "TRootAuth.h"
  header "TRootSecContext.h"
}
module math_minuit2 {
  export *
  header "TMinuit2TraceObject.h"
  header "Minuit2/MnParameterScan.h"
  header "Minuit2/MnMinimize.h"
  header "Minuit2/FumiliGradientCalculator.h"
  header "Minuit2/FCNGradientBase.h"
  header "Minuit2/MinimumState.h"
  header "Minuit2/GenericFunction.h"
  header "Minuit2/MnParabolaPoint.h"
  header "Minuit2/CombinedMinimumBuilder.h"
  header "Minuit2/MnUserParameters.h"
  header "Minuit2/BasicMinimumError.h"
  header "Minuit2/VariableMetricEDMEstimator.h"
  header "Minuit2/BasicFunctionMinimum.h"
  header "Minuit2/MnReferenceCounter.h"
  header "Minuit2/MPIProcess.h"
  header "Minuit2/LaOuterProduct.h"
  header "Minuit2/FumiliFCNBase.h"
  header "Minuit2/MnPosDef.h"
  header "Minuit2/FumiliMaximumLikelihoodFCN.h"
  header "Minuit2/MnUserParameterState.h"
  header "Minuit2/MnCross.h"
  header "Minuit2/MnScan.h"
  header "Minuit2/MnCovarianceSqueeze.h"
  header "Minuit2/MnLineSearch.h"
  header "Minuit2/VariableMetricMinimizer.h"
  header "Minuit2/FunctionMinimum.h"
  header "Minuit2/FumiliStandardMaximumLikelihoodFCN.h"
  header "Minuit2/BasicMinimumParameters.h"
  header "Minuit2/FumiliErrorUpdator.h"
  header "Minuit2/LaSum.h"
  header "Minuit2/AnalyticalGradientCalculator.h"
  header "Minuit2/MinimumSeedGenerator.h"
  header "Minuit2/CombinedMinimizer.h"
  header "Minuit2/FumiliBuilder.h"
  header "Minuit2/LaInverse.h"
  header "Minuit2/MnRefCountedPointer.h"
  header "Minuit2/SimplexParameters.h"
  header "Minuit2/FunctionMinimizer.h"
  header "Minuit2/SqrtUpParameterTransformation.h"
  header "Minuit2/ContoursError.h"
  header "Minuit2/GradientCalculator.h"
  header "Minuit2/MinimumError.h"
  header "Minuit2/SqrtLowParameterTransformation.h"
  header "Minuit2/MinimumParameters.h"
  header "Minuit2/MnParabola.h"
  header "Minuit2/StackAllocator.h"
  header "Minuit2/MnFunctionCross.h"
  header "Minuit2/SimplexMinimizer.h"
  header "Minuit2/FumiliMinimizer.h"
  header "Minuit2/MnUserTransformation.h"
  header "Minuit2/SimplexBuilder.h"
  header "Minuit2/FumiliStandardChi2FCN.h"
  header "Minuit2/NegativeG2LineSearch.h"
  header "Minuit2/MinosError.h"
  header "Minuit2/MnSimplex.h"
  header "Minuit2/FumiliChi2FCN.h"
  header "Minuit2/MnHesse.h"
  header "Minuit2/BasicMinimumState.h"
  header "Minuit2/MnVectorTransform.h"
  header "Minuit2/LAVector.h"
  header "Minuit2/MinuitParameter.h"
  header "Minuit2/MnTiny.h"
  header "Minuit2/MnParabolaFactory.h"
  header "Minuit2/ScanBuilder.h"
  header "Minuit2/MatrixInverse.h"
  header "Minuit2/FunctionGradient.h"
  header "Minuit2/ModularFunctionMinimizer.h"
  header "Minuit2/ParametricFunction.h"
  header "Minuit2/MnFcn.h"
  header "Minuit2/Numerical2PGradientCalculator.h"
  header "Minuit2/FCNBase.h"
  header "Minuit2/BasicMinimumSeed.h"
  header "Minuit2/MnUserFcn.h"
  header "Minuit2/MnUserCovariance.h"
  header "Minuit2/MinimumSeed.h"
  header "Minuit2/MnMinos.h"
  header "Minuit2/SinParameterTransformation.h"
  header "Minuit2/MinimumBuilder.h"
  header "Minuit2/VariableMetricBuilder.h"
  header "Minuit2/LaProd.h"
  header "Minuit2/MnConfig.h"
  header "Minuit2/MnTraceObject.h"
  header "Minuit2/FCNGradAdapter.h"
  header "Minuit2/BasicFunctionGradient.h"
  header "Minuit2/MinimumErrorUpdator.h"
  header "Minuit2/MnMigrad.h"
  header "Minuit2/MnMachinePrecision.h"
  header "Minuit2/MnPlot.h"
  header "Minuit2/DavidonErrorUpdator.h"
  header "Minuit2/SimplexSeedGenerator.h"
  header "Minuit2/MnFumiliMinimize.h"
  header "Minuit2/ABProd.h"
  header "Minuit2/MnStrategy.h"
  header "Minuit2/MnGlobalCorrelationCoeff.h"
  header "Minuit2/FCNAdapter.h"
  header "Minuit2/ABTypes.h"
  header "Minuit2/ScanMinimizer.h"
  header "Minuit2/HessianGradientCalculator.h"
  header "Minuit2/MnContours.h"
  header "Minuit2/MnSeedGenerator.h"
  header "Minuit2/InitialGradientCalculator.h"
  header "Minuit2/MnMatrix.h"
  header "Minuit2/LASymMatrix.h"
  header "Minuit2/MnPrint.h"
  header "Minuit2/FumiliFCNAdapter.h"
  header "Minuit2/MnApplication.h"
  header "Minuit2/MnEigen.h"
  header "Minuit2/ABObj.h"
  header "Minuit2/VectorOuterProduct.h"
  header "Minuit2/Minuit2Minimizer.h"
  header "Minuit2/ABSum.h"
}

module Vc {
  export *
  //header "Vc/ushort_v" // depracated
  header "Vc/Allocator"
  header "Vc/Vc"
  header "Vc/IO"
  header "Vc/short_v"
  header "Vc/sfloat_v"
  header "Vc/global.h"
  header "Vc/uint_v"
  header "Vc/Utils"
  header "Vc/float_v"
  header "Vc/support.h"
  header "Vc/Memory"
  header "Vc/cpuid.h"
  header "Vc/version.h"
  header "Vc/limits"
  header "Vc/vector.h"
  header "Vc/double_v"
  header "Vc/int_v"
  header "Vc/internal/namespace.h"

  module vc_common {
    header "Vc/common/windows_fix_intrin.h"
    header "Vc/common/types.h"
    header "Vc/common/memorybase.h"
    header "Vc/common/undomacros.h"
    header "Vc/common/operators.h"
    header "Vc/common/operand.h"
    header "Vc/common/exponential.h"
    header "Vc/common/aliasingentryhelper.h"
    header "Vc/common/iif.h"
    header "Vc/common/memoryfwd.h"
    header "Vc/common/fix_clang_emmintrin.h"
    header "Vc/common/deinterleave.h"
    header "Vc/common/macros.h"
    header "Vc/common/storage.h"
    header "Vc/common/support.h"
    header "Vc/common/trigonometric.h"
    header "Vc/common/interleavedmemory.h"
    header "Vc/common/vectortuple.h"
    header "Vc/common/memory.h"
    header "Vc/common/bitscanintrinsics.h"
    header "Vc/common/logarithm.h"
    export *
  }

  module vc_sse {
    requires sse
    header "Vc/sse/casts.h"
    //header "Vc/sse/forceToRegisters.tcc"
    header "Vc/sse/vectorhelper.h"
    header "Vc/sse/types.h"
    header "Vc/sse/undomacros.h"
    header "Vc/sse/const_data.h"
    header "Vc/sse/shuffle.h"
    header "Vc/sse/vector.tcc"
    header "Vc/sse/limits.h"
    header "Vc/sse/vectorhelper.tcc"
    header "Vc/sse/deinterleave.tcc"
    //header "Vc/sse/intrinsics.h"
    header "Vc/sse/macros.h"
    header "Vc/sse/helperimpl.h"
    header "Vc/sse/mask.h"
    header "Vc/sse/debug.h"
    header "Vc/sse/const.h"
    header "Vc/sse/math.h"
    header "Vc/sse/interleavedmemory.tcc"
    header "Vc/sse/helperimpl.tcc"
    header "Vc/sse/vector.h"
    header "Vc/sse/prefetches.tcc"
    export *
  }
  
  module vc_scalar {
    header "Vc/scalar/writemaskedvector.h"
    header "Vc/scalar/types.h"
    header "Vc/scalar/undomacros.h"
    header "Vc/scalar/vector.tcc"
    header "Vc/scalar/limits.h"
    header "Vc/scalar/macros.h"
    header "Vc/scalar/helperimpl.h"
    header "Vc/scalar/mask.h"
    header "Vc/scalar/math.h"
    header "Vc/scalar/interleavedmemory.tcc"
    header "Vc/scalar/helperimpl.tcc"
    header "Vc/scalar/vector.h"
    export *
  }
  module vc_avx {
    requires avx
    header "Vc/avx/writemaskedvector.h"
    header "Vc/avx/casts.h"
    //header "Vc/avx/forceToRegisters.tcc"
    header "Vc/avx/vectorhelper.h"
    header "Vc/avx/types.h"
    header "Vc/avx/undomacros.h"
    header "Vc/avx/const_data.h"
    header "Vc/avx/shuffle.h"
    header "Vc/avx/vector.tcc"
    header "Vc/avx/limits.h"
    header "Vc/avx/vectorhelper.tcc"
    header "Vc/avx/writemaskedvector.tcc"
    header "Vc/avx/deinterleave.tcc"
    header "Vc/avx/intrinsics.h"
    header "Vc/avx/macros.h"
    header "Vc/avx/helperimpl.h"
    header "Vc/avx/mask.h"
    header "Vc/avx/mask.tcc"
    header "Vc/avx/debug.h"
    header "Vc/avx/const.h"
    header "Vc/avx/math.h"
    header "Vc/avx/interleavedmemory.tcc"
    header "Vc/avx/sorthelper.h"
    header "Vc/avx/helperimpl.tcc"
    header "Vc/avx/vector.h"
    header "Vc/avx/prefetches.tcc"
    export *
  }
}
//}// end module ROOT
